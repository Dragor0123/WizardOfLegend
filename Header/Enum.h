#pragma once

#ifndef __ENUM_H__
#define __ENUM_H__

namespace MOVEDIR
{
	enum FB { MD_BACK = -1, MD_NONE, MD_FRONT};
	enum DIR { MD_LEFT, MD_RIGHT, MD_TOP, MD_BOT, MD_LT, MD_LB, MD_RT, MD_RB, MD_MIDDLE };
}
namespace MEZ
{
	enum STATE {MZ_NONE, MZ_FROZEN, MZ_POISON, MZ_END};
}

namespace DIGIT
{
	enum COLOR {DC_WHITE, DC_YELLOW, DC_GREEN, DC_END};
}

namespace OBJID
{
	//UI가 들어갈 수도 있음
	// FABLE을 npc, card(item, arcana), telecircle로 나눠야 함
	enum ID
	{
		UNDERDECO, TELECIR,
		SUMMONCARD, PLAYER,
		MONSTER,
		P_RECTBULLET, P_CIRBULLET,
		M_RECTBULLET, M_CIRBULLET,
		P_SHIELD, M_SHIELD,
		NPC, CARD, OBSTACLE, 
		DECO, GOODS,
		EFFECT, DIGIT_UI,
		MENU_UI, PLAZA_UI, STAGE1_UI, EARTHBSTAGE_UI, FIREBSTAGE_UI, 
		INVENTORY, MOUSE, END
	};
}

// BackGround에 들어갈 거 -> UNDERDECO, TELECIR, 
//
// GAMEOBJECT : SUMMONCARD, PLAYER, MONSTER, BOSS, BULLET, SHIELD, NPC, CARD, OBSTACLE, PORTAL, -> 
// GAMEOBJECT2 : BULLET 몇몇 종류들... GOODS
// MENU_UI, STAGE_UI, INVENTORY  -> UI
// MOUSE- > MOUSE

namespace GROUPID
{
	enum ID { TILE, BACKGROUND, GAMEOBJECT, GAMEOBJECT_2, EFFECT, UI, MOUSE, END };
}

namespace KEYOWN
{
	enum KEYSWITCH { KS_PLAYER, KS_FABLE, KS_TITLEMENU, KS_INVENTORY, KS_WARDINVEN, KS_INGAMEMENU, KS_END };
}

namespace COLLISION
{
	enum CODE {};
}

namespace ARCANA
{
	enum TYPE {FIRE, ICE, ELECTRIC, GROUND, WIND, CHAOS, TYPE_END};
	enum CATEGORY {BASIC, STANDARD, SIGNITURE, DASH, CATEGORY_END};
}

namespace TILEENUM
{
	enum ID { ID_PLAZA, ID_FIRE, ID_EARTHBOSS_ROOM, ID_FIREBOSS_ROOM, ID_END};
	enum OPTION { OPT_MOVE, OPT_STOP, OPT_DROP, OPT_END };
}

namespace ROBE
{
	enum COLOR { RED, BLUE, YELLOW, ORANGE, GREEN, PURPLE, WHITE, BLACK, GRAYBLUE, END};
}
#endif // !__ENUM_H__
